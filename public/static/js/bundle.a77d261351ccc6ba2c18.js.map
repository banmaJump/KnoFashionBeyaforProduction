{"version":3,"file":"js/bundle.a77d261351ccc6ba2c18.js","mappings":"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","sources":["webpack://list-app/./src/commons/Pagination.jsx","webpack://list-app/./src/services/blogs/components/Detail.jsx","webpack://list-app/./src/services/blogs/components/ListItem.jsx","webpack://list-app/./src/services/blogs/components/ListLayout.jsx"],"sourcesContent":["import React from 'react';\n\nconst Pagination = ({ currentPage, itemsPerPage, totalItems, handlePageChange }) => {\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n  const pages = [];\n\n  for (let i = 1; i <= totalPages; i++) {\n    pages.push(i);\n  }\n\n  return (\n    <div className=\"pagination\">\n      {pages.map(page => (\n        <button\n          key={page}\n          className={page === currentPage ? 'active' : ''}\n          onClick={() => handlePageChange(page)}\n        >\n          {page}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport ListLayout from './ListLayout.jsx';\nimport Pagination from '../../../commons/Pagination.jsx';\n\nconst useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nconst Detail = () => {\n  const query = useQuery().get('query') || '';\n  const type = useQuery().get('type') || 'all';\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n  const [totalItems, setTotalItems] = useState(0);\n\n  useEffect(() => {\n    console.log(`Query: ${query}, Type: ${type}`); // デバッグ情報\n\n    const fetchArticles = async () => {\n      try {\n        const response = await axios.get('/api/details', {\n          params: {\n            query,\n            type,\n            page: currentPage,\n            limit: itemsPerPage,\n          },\n        });\n\n        if (response.data.redirect) {\n          window.location.href = response.data.redirect;\n          return;\n        }\n\n        setArticles(response.data.items || []);\n        setTotalItems(response.data.totalCount || 0);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching details:', error);\n        setError('Failed to fetch details');\n        setLoading(false);\n      }\n    };\n\n    fetchArticles();\n  }, [query, type, currentPage]);\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n  if (loading && currentPage === 1) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  if (articles.length === 0) {\n    return (\n      <div className='brand_detail_brand_intro'>\n        <h2>検索対象はありませんでした。</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className='brand_detail_brand_intro'>\n      <ListLayout\n        title=\"検索結果\"\n        genre=\"ALLジャンル\"\n        items={articles}\n        articleLink={article => `/article/${article.id}`}\n      />\n      <Pagination\n        currentPage={currentPage}\n        itemsPerPage={itemsPerPage}\n        totalItems={totalItems}\n        handlePageChange={handlePageChange}\n      />\n    </div>\n  );\n};\n\nexport default Detail;\n","import React from 'react';\n\nconst ListItem = ({ title, description, date, author, imageUrl, linkUrl, articleLink }) => {\n  return (\n    <div className=\"list-item\">\n      <a href={articleLink} target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={imageUrl} alt={title}></img>\n      </a>\n      <div className=\"list-item-content\">\n        <p className=\"list-item-contentnop\">{description}</p>\n        <div className='list-item-content-div'>\n          <p>{new Date(date).toDateString()}</p>\n          <p>By {author}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ListItem from './ListItem.jsx';\nimport imagine from '../../../assets/images/BanmaImage1.png';  // 本来imageUrl={item.image_url}\n\nconst ListLayout = ({ title, genre, items, articleLink, sortOrder, handleSortChange }) => {\n  console.log('ListLayout items:', items); \n  return (\n    <div className=\"ListLayoutBoader\">\n      <h1 className='everyday-title'>{title}</h1>\n      <div className='flexs_system'>\n        <h2>カテゴリ「{genre}」</h2>\n        <div className=\"sort-options\">\n          <label>\n            <select value={sortOrder} onChange={handleSortChange}>\n              <option value=\"newest\">Newest</option>\n              <option value=\"oldest\">Oldest</option>\n            </select>\n          </label>\n        </div>\n      </div>\n      <div className=\"sub-header-2\">\n        <ul className=\"sub-nav-links-2\">\n          <Link to=\"/\"><li>Home</li></Link>\n          <Link to=\"/radios\"><li>ラジオ</li></Link>\n          <Link to=\"/brands\"><li>記事</li></Link>\n          <Link to=\"/vlogs\"><li>Vlog</li></Link>\n          <Link to=\"/goods\"><li>グッズ</li></Link>\n        </ul>\n      </div>\n      <div className=\"list-container\">\n        {items.map(item => (\n          <ListItem\n            key={item.id}\n            title={item.title}\n            description={item.title_content}\n            date={item.created_at}\n            author={item.brand_name}\n            imageUrl={imagine}\n            linkUrl={item.link_url}\n            articleLink={articleLink(item)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ListLayout;\n"],"names":["_ref","currentPage","itemsPerPage","totalItems","handlePageChange","totalPages","Math","ceil","pages","i","push","React","className","map","page","key","onClick","useQuery","URLSearchParams","useLocation","search","query","get","type","_useState","useState","_useState2","_slicedToArray","articles","setArticles","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useState7","_useState8","setCurrentPage","_useState9","_useState10","setTotalItems","useEffect","fetchArticles","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","params","limit","sent","data","redirect","window","location","href","abrupt","items","totalCount","t0","stop","apply","arguments","length","ListLayout","title","genre","articleLink","article","concat","id","Pagination","newPage","description","date","author","imageUrl","linkUrl","target","rel","src","alt","Date","toDateString","sortOrder","handleSortChange","value","onChange","Link","to","item","ListItem","title_content","created_at","brand_name","imagine","link_url"],"sourceRoot":""}