{"version":3,"file":"js/bundle.ad0c86e5dcfe60a136a6.js","mappings":"+HAyBA,QAvBmB,SAAHA,GAId,IAJkF,IAA9DC,EAAWD,EAAXC,YAAaC,EAAYF,EAAZE,aAAcC,EAAUH,EAAVG,WAAYC,EAAgBJ,EAAhBI,iBACrDC,EAAaC,KAAKC,KAAKJ,EAAaD,GACpCM,EAAQ,GAELC,EAAI,EAAGA,GAAKJ,EAAYI,IAC/BD,EAAME,KAAKD,GAGb,OACEE,EAAAA,cAAA,OAAKC,UAAU,cACZJ,EAAMK,KAAI,SAAAC,GAAI,OACbH,EAAAA,cAAA,UACEI,IAAKD,EACLF,UAAWE,IAASb,EAAc,SAAW,GAC7Ce,QAAS,kBAAMZ,EAAiBU,EAAK,GAEpCA,EACM,IAIjB,C,kICgEA,QAjFoB,WAClB,IAAQG,GAAOC,EAAAA,EAAAA,KAAPD,GACRE,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA4BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA8Bb,EAAAA,EAAAA,WAAS,GAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BjB,EAAAA,EAAAA,UAAS,MAAKkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAsCrB,EAAAA,EAAAA,UAAS,GAAEsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAA1CxC,EAAWyC,EAAA,GAAEC,EAAcD,EAAA,GAClCE,GAAoCxB,EAAAA,EAAAA,UAAS,GAAEyB,GAAAvB,EAAAA,EAAAA,GAAAsB,EAAA,GAAxCzC,EAAU0C,EAAA,GAAEC,EAAaD,EAAA,GAChCE,GAAkC3B,EAAAA,EAAAA,UAAS,UAAS4B,GAAA1B,EAAAA,EAAAA,GAAAyB,EAAA,GAA7CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,IAG9BG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAApD,GAAAqD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,IAAAA,MAAA,SAAAO,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE0CC,QAAQC,IAAI,CAC1EC,EAAAA,EAAMC,IAAI,eAADC,OAAgBnD,IACzBiD,EAAAA,EAAMC,IAAI,eAADC,OAAgBnD,EAAE,aAAa,CACtCoD,OAAQ,CAAEvD,KAAMb,EAAaqE,MARlB,GAQuCC,KAAMtB,KAE1DiB,EAAAA,EAAMC,IAAI,eAADC,OAAgBnD,EAAE,cAC3B,OAAAuC,EAAAK,EAAAW,KAAAf,GAAAnC,EAAAA,EAAAA,GAAAkC,EAAA,GANKE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAAEG,EAAcH,EAAA,GAQtDjC,EAASkC,EAAce,MACvB7C,EAAY+B,EAAiBc,KAAKC,OAClC5B,EAAca,EAAiBc,KAAKE,YACpC3C,EAAU4B,EAAea,MAEzBrC,GAAW,GAAOyB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,SAGlBrB,EAAS,iCACTJ,GAAW,GAAO,yBAAAyB,EAAAgB,OAAA,GAAAtB,EAAA,mBAErB,kBArBsB,OAAAvD,EAAA8E,MAAA,KAAAC,UAAA,KAuBvB3B,GACF,GAAG,CAACnC,EAAIhB,EAAagD,IAUrB,OAAId,EACKxB,EAAAA,cAAA,SAAG,cAGR4B,EACK5B,EAAAA,cAAA,SAAI4B,GAIX5B,EAAAA,cAAA,OAAKC,UAAU,4BACbD,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,UAAKY,EAAMyD,MACVjD,EAAOkD,OAAS,GACftE,EAAAA,cAAA,OAAKuE,IAAKnD,EAAO,GAAGoD,IAAKC,IAAG,GAAAhB,OAAK7C,EAAMyD,KAAI,UAAUpE,UAAU,gBAEjED,EAAAA,cAAA,SAAIY,EAAM8D,aACV1E,EAAAA,cAAC2E,EAAAA,EAAU,CACTC,MAAK,QACLC,MAAOjE,EAAMyD,KACbN,MAAO/C,EACP8D,YAAa,SAACC,GAAO,iBAAAtB,OAAgBnD,EAAE,cAAAmD,OAAasB,EAAQzE,GAAE,EAC9DgC,UAAWA,EACX0C,iBA1BmB,SAACC,GACxB1C,EAAa0C,EAAEC,OAAOC,MACxB,IA0BInF,EAAAA,cAACoF,EAAAA,EAAU,CACT9F,YAAaA,EACbC,aA/De,GAgEfC,WAAYA,EACZ6F,aApCmB,SAACC,GACxBtD,EAAesD,EACjB,IAsCF,C,uDClEA,QAjBiB,SAAHjG,GAA6E,IAAvEuF,EAAKvF,EAALuF,MAAOF,EAAWrF,EAAXqF,YAAaa,EAAIlG,EAAJkG,KAAMC,EAAMnG,EAANmG,OAAQC,EAAQpG,EAARoG,SAAmBX,GAAFzF,EAAPqG,QAAoBrG,EAAXyF,aACvE,OACE9E,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,KAAG2F,KAAMb,EAAaI,OAAO,SAASU,IAAI,uBACxC5F,EAAAA,cAAA,OAAKuE,IAAKkB,EAAUhB,IAAKG,KAE3B5E,EAAAA,cAAA,OAAKC,UAAU,qBACbD,EAAAA,cAAA,KAAGC,UAAU,wBAAwByE,GACrC1E,EAAAA,cAAA,OAAKC,UAAU,yBACbD,EAAAA,cAAA,SAAI,IAAI6F,KAAKN,GAAMO,gBACnB9F,EAAAA,cAAA,SAAG,MAAIwF,KAKjB,E,oDC+BA,QA3CmB,SAAHnG,GAA0E,IAApEuF,EAAKvF,EAALuF,MAAOC,EAAKxF,EAALwF,MAAOd,EAAK1E,EAAL0E,MAAOe,EAAWzF,EAAXyF,YAAaxC,EAASjD,EAATiD,UAAW0C,EAAgB3F,EAAhB2F,iBAEjE,OACEhF,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAAA,MAAIC,UAAU,kBAAkB2E,GAChC5E,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,UAAI,QAAM6E,EAAM,KAChB7E,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,aACEA,EAAAA,cAAA,UAAQmF,MAAO7C,EAAWyD,SAAUf,GAClChF,EAAAA,cAAA,UAAQmF,MAAM,UAAS,UACvBnF,EAAAA,cAAA,UAAQmF,MAAM,UAAS,cAK/BnF,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,MAAIC,UAAU,mBACZD,EAAAA,cAACgG,EAAAA,GAAI,CAACC,GAAG,KAAIjG,EAAAA,cAAA,UAAI,SACjBA,EAAAA,cAACgG,EAAAA,GAAI,CAACC,GAAG,WAAUjG,EAAAA,cAAA,UAAI,QACvBA,EAAAA,cAACgG,EAAAA,GAAI,CAACC,GAAG,WAAUjG,EAAAA,cAAA,UAAI,OACvBA,EAAAA,cAACgG,EAAAA,GAAI,CAACC,GAAG,UAASjG,EAAAA,cAAA,UAAI,SACtBA,EAAAA,cAACgG,EAAAA,GAAI,CAACC,GAAG,UAASjG,EAAAA,cAAA,UAAI,UAG1BA,EAAAA,cAAA,OAAKC,UAAU,kBACZ8D,EAAM7D,KAAI,SAAAgG,GAAI,OACblG,EAAAA,cAACmG,EAAQ,CACP/F,IAAK8F,EAAK5F,GACVsE,MAAOsB,EAAKtB,MACZF,YAAawB,EAAKE,cAClBb,KAAMW,EAAKG,WACXb,OAAQU,EAAKI,WACbb,SAAUc,EACVb,QAASQ,EAAKM,SACd1B,YAAaA,EAAYoB,IACzB,KAKZ,C","sources":["webpack://list-app/./src/commons/Pagination.jsx","webpack://list-app/./src/services/blogs/components/BrandDetail.jsx","webpack://list-app/./src/services/blogs/components/ListItem.jsx","webpack://list-app/./src/services/blogs/components/ListLayout.jsx"],"sourcesContent":["import React from 'react';\n\nconst Pagination = ({ currentPage, itemsPerPage, totalItems, handlePageChange }) => {\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n  const pages = [];\n\n  for (let i = 1; i <= totalPages; i++) {\n    pages.push(i);\n  }\n\n  return (\n    <div className=\"pagination\">\n      {pages.map(page => (\n        <button\n          key={page}\n          className={page === currentPage ? 'active' : ''}\n          onClick={() => handlePageChange(page)}\n        >\n          {page}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport ListLayout from './ListLayout.jsx';\nimport Pagination from '../../../commons/Pagination.jsx';\n\nconst BrandDetail = () => {\n  const { id } = useParams();\n  const [brand, setBrand] = useState({});\n  const [articles, setArticles] = useState([]);\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalItems, setTotalItems] = useState(0);\n  const [sortOrder, setSortOrder] = useState('newest');\n  const itemsPerPage = 12;\n\n  useEffect(() => {\n    const fetchBrandDetails = async () => {\n      try {\n        const [brandResponse, articlesResponse, imagesResponse] = await Promise.all([\n          axios.get(`/api/brands/${id}`),\n          axios.get(`/api/brands/${id}/articles`, {\n            params: { page: currentPage, limit: itemsPerPage, sort: sortOrder },\n          }),\n          axios.get(`/api/brands/${id}/images`),\n        ]);\n\n        setBrand(brandResponse.data);\n        setArticles(articlesResponse.data.items);\n        setTotalItems(articlesResponse.data.totalCount);\n        setImages(imagesResponse.data);\n\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching brand details:', error);\n        setError('Failed to fetch brand details');\n        setLoading(false);\n      }\n    };\n\n    fetchBrandDetails();\n  }, [id, currentPage, sortOrder]);\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n  const handleSortChange = (e) => {\n    setSortOrder(e.target.value);\n  };\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div className='brand_detail_brand_intro'>\n      <h1>現在開発中</h1>\n      <h1>{brand.name}</h1>\n      {images.length > 0 && (\n        <img src={images[0].url} alt={`${brand.name} image`} className=\"brand-image\"></img>\n      )}\n      <p>{brand.description}</p>\n      <ListLayout\n        title={`全ての記事`}\n        genre={brand.name}\n        items={articles}\n        articleLink={(article) => `/brands/${id}/articles/${article.id}`} // ブランドに関連する特定の記事ページへのリンク\n        sortOrder={sortOrder}\n        handleSortChange={handleSortChange}\n      />\n      <Pagination\n        currentPage={currentPage}\n        itemsPerPage={itemsPerPage}\n        totalItems={totalItems}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n};\n\nexport default BrandDetail;\n","import React from 'react';\n\nconst ListItem = ({ title, description, date, author, imageUrl, linkUrl, articleLink }) => {\n  return (\n    <div className=\"list-item\">\n      <a href={articleLink} target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={imageUrl} alt={title}></img>\n      </a>\n      <div className=\"list-item-content\">\n        <p className=\"list-item-contentnop\">{description}</p>\n        <div className='list-item-content-div'>\n          <p>{new Date(date).toDateString()}</p>\n          <p>By {author}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ListItem from './ListItem.jsx';\nimport imagine from '../../../assets/images/BanmaImage1.png';  // 本来imageUrl={item.image_url}\n\nconst ListLayout = ({ title, genre, items, articleLink, sortOrder, handleSortChange }) => {\n  console.log('ListLayout items:', items); \n  return (\n    <div className=\"ListLayoutBoader\">\n      <h1 className='everyday-title'>{title}</h1>\n      <div className='flexs_system'>\n        <h2>カテゴリ「{genre}」</h2>\n        <div className=\"sort-options\">\n          <label>\n            <select value={sortOrder} onChange={handleSortChange}>\n              <option value=\"newest\">Newest</option>\n              <option value=\"oldest\">Oldest</option>\n            </select>\n          </label>\n        </div>\n      </div>\n      <div className=\"sub-header-2\">\n        <ul className=\"sub-nav-links-2\">\n          <Link to=\"/\"><li>Home</li></Link>\n          <Link to=\"/radios\"><li>ラジオ</li></Link>\n          <Link to=\"/brands\"><li>記事</li></Link>\n          <Link to=\"/vlogs\"><li>Vlog</li></Link>\n          <Link to=\"/goods\"><li>グッズ</li></Link>\n        </ul>\n      </div>\n      <div className=\"list-container\">\n        {items.map(item => (\n          <ListItem\n            key={item.id}\n            title={item.title}\n            description={item.title_content}\n            date={item.created_at}\n            author={item.brand_name}\n            imageUrl={imagine}\n            linkUrl={item.link_url}\n            articleLink={articleLink(item)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ListLayout;\n"],"names":["_ref","currentPage","itemsPerPage","totalItems","handlePageChange","totalPages","Math","ceil","pages","i","push","React","className","map","page","key","onClick","id","useParams","_useState","useState","_useState2","_slicedToArray","brand","setBrand","_useState3","_useState4","articles","setArticles","_useState5","_useState6","images","setImages","_useState7","_useState8","loading","setLoading","_useState9","_useState10","error","setError","_useState11","_useState12","setCurrentPage","_useState13","_useState14","setTotalItems","_useState15","_useState16","sortOrder","setSortOrder","useEffect","fetchBrandDetails","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$Promise$all","_yield$Promise$all2","brandResponse","articlesResponse","imagesResponse","_context","prev","next","Promise","all","axios","get","concat","params","limit","sort","sent","data","items","totalCount","t0","stop","apply","arguments","name","length","src","url","alt","description","ListLayout","title","genre","articleLink","article","handleSortChange","e","target","value","Pagination","onPageChange","newPage","date","author","imageUrl","linkUrl","href","rel","Date","toDateString","onChange","Link","to","item","ListItem","title_content","created_at","brand_name","imagine","link_url"],"sourceRoot":""}