{"version":3,"file":"js/bundle.4993ac5f20cbabd53803.js","mappings":"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","sources":["webpack://list-app/./src/commons/Pagination.jsx","webpack://list-app/./src/services/blogs/components/BrandList.jsx","webpack://list-app/./src/services/blogs/components/ListItem.jsx","webpack://list-app/./src/services/blogs/components/ListLayout.jsx"],"sourcesContent":["import React from 'react';\n\nconst Pagination = ({ currentPage, itemsPerPage, totalItems, handlePageChange }) => {\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n  const pages = [];\n\n  for (let i = 1; i <= totalPages; i++) {\n    pages.push(i);\n  }\n\n  return (\n    <div className=\"pagination\">\n      {pages.map(page => (\n        <button\n          key={page}\n          className={page === currentPage ? 'active' : ''}\n          onClick={() => handlePageChange(page)}\n        >\n          {page}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useEffect, useState, useCallback, useMemo } from 'react';\nimport axios from 'axios';\nimport ListLayout from './ListLayout.jsx';\nimport Pagination from '../../../commons/Pagination.jsx';\n\nconst BrandList = () => {\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n  const [totalItems, setTotalItems] = useState(0);\n\n  useEffect(() => {\n    const fetchBrandArticles = async () => {\n      try {\n        const response = await axios.get('/api/brands', {\n          params: {\n            page: currentPage,\n            limit: itemsPerPage\n          }\n        });\n        setArticles(response.data.items);\n        setTotalItems(response.data.totalCount);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching brand articles:', error);\n        setError('Failed to fetch brand articles');\n        setLoading(false);\n      }\n    };\n\n    fetchBrandArticles();\n  }, [currentPage]);\n\n  const handlePageChange = useCallback((newPage) => {\n    setCurrentPage(newPage);\n  }, []);\n\n  const paginatedArticles = useMemo(() => articles, [articles]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div className='brand_detail_brand_intro'>\n      <ListLayout\n        title=\"全ての記事\"\n        genre=\"ブランド\"\n        items={paginatedArticles}\n        articleLink={(article) => `/brand/${article.id}`}\n      />\n      <Pagination\n        currentPage={currentPage}\n        itemsPerPage={itemsPerPage}\n        totalItems={totalItems}\n        handlePageChange={handlePageChange}\n      />\n    </div>\n  );\n};\n\nexport default BrandList;\n","import React from 'react';\n\nconst ListItem = ({ title, description, date, author, imageUrl, linkUrl, articleLink }) => {\n  return (\n    <div className=\"list-item\">\n      <a href={articleLink} target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={imageUrl} alt={title}></img>\n      </a>\n      <div className=\"list-item-content\">\n        <p className=\"list-item-contentnop\">{description}</p>\n        <div className='list-item-content-div'>\n          <p>{new Date(date).toDateString()}</p>\n          <p>By {author}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ListItem from './ListItem.jsx';\nimport imagine from '../../../assets/images/BanmaImage1.png';  // 本来imageUrl={item.image_url}\n\nconst ListLayout = ({ title, genre, items, articleLink, sortOrder, handleSortChange }) => {\n  console.log('ListLayout items:', items); \n  return (\n    <div className=\"ListLayoutBoader\">\n      <h1 className='everyday-title'>{title}</h1>\n      <div className='flexs_system'>\n        <h2>カテゴリ「{genre}」</h2>\n        <div className=\"sort-options\">\n          <label>\n            <select value={sortOrder} onChange={handleSortChange}>\n              <option value=\"newest\">Newest</option>\n              <option value=\"oldest\">Oldest</option>\n            </select>\n          </label>\n        </div>\n      </div>\n      <div className=\"sub-header-2\">\n        <ul className=\"sub-nav-links-2\">\n          <Link to=\"/\"><li>Home</li></Link>\n          <Link to=\"/radios\"><li>ラジオ</li></Link>\n          <Link to=\"/brands\"><li>記事</li></Link>\n          <Link to=\"/vlogs\"><li>Vlog</li></Link>\n          <Link to=\"/goods\"><li>グッズ</li></Link>\n        </ul>\n      </div>\n      <div className=\"list-container\">\n        {items.map(item => (\n          <ListItem\n            key={item.id}\n            title={item.title}\n            description={item.title_content}\n            date={item.created_at}\n            author={item.brand_name}\n            imageUrl={imagine}\n            linkUrl={item.link_url}\n            articleLink={articleLink(item)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ListLayout;\n"],"names":["_ref","currentPage","itemsPerPage","totalItems","handlePageChange","totalPages","Math","ceil","pages","i","push","React","className","map","page","key","onClick","_useState","useState","_useState2","_slicedToArray","articles","setArticles","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useState7","_useState8","setCurrentPage","_useState9","_useState10","setTotalItems","useEffect","fetchBrandArticles","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","get","params","limit","sent","data","items","totalCount","t0","stop","apply","arguments","useCallback","newPage","paginatedArticles","useMemo","ListLayout","title","genre","articleLink","article","concat","id","Pagination","description","date","author","imageUrl","linkUrl","href","target","rel","src","alt","Date","toDateString","sortOrder","handleSortChange","value","onChange","Link","to","item","ListItem","title_content","created_at","brand_name","imagine","link_url"],"sourceRoot":""}